version: 2.1

orbs:
  node: circleci/node@5.1.0
  ruby: circleci/ruby@2.1.0

jobs:
  install_dependencies:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - node/install
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install node dependencies
          command: npm ci --workspaces
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build_node:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Build node applications
          command: npm run build --workspaces
      - persist_to_workspace:
          root: .
          paths:
            - api/dist
            - management/dist
            - pki/dist
            - server/dist

  test_node:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Install MongoDB
          command: |
            curl -fsSL https://pgp.mongodb.com/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
            echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
            sudo apt-get update
            sudo apt-get install -y mongodb-org
      - run:
          name: Test node applications
          command: npm run test --if-present --workspaces
          environment:
            MONGOMS_SYSTEM_BINARY: /usr/bin/mongod

  build_android:
    docker:
      - image: cimg/android:2023.09
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Install OpenSSL
          command: sudo apt-get update && sudo apt-get install -y openssl
      - ruby/install:
          version: $(cat .ruby-version)
      - run:
          name: Install bundler
          command: gem update --system && gem uninstall bundler && gem install bundler
      - run:
          name: Build android application
          command: npm run build:android -w client

  build_containers:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build containers
          command: docker compose build

workflows:
  build_and_test:
    jobs:
      - install_dependencies
      - build_node:
          requires:
            - install_dependencies
      - test_node:
          requires:
            - build_node
      - build_android:
          requires:
            - build_node
  containers:
    jobs:
      - build_containers
