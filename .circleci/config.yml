version: 2.1

orbs:
  node: circleci/node@5.1.0
  ruby: circleci/ruby@2.1.0

jobs:
  install_dependencies:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - node/install
      - run:
          name: Install node dependencies
          command: npm ci --workspaces --include-workspace-root
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  build_node:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Build node applications
          command: npx nx run-many -t build
      - persist_to_workspace:
          root: .
          paths:
            - apps/api/dist
            - apps/management/dist
            - apps/server/dist
            - libs/pki/dist

  lint_node:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Test node applications
          command: npx nx run-many -t lint

  type_check_node:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Test node applications
          command: npx nx run-many -t types

  test_node:
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Test node applications
          command: npx nx run-many -t test --parallel=4 -- --runInBand
  
  integration_node:
    docker:
      - image: cimg/base:current
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - setup_remote_docker
      - run:
          name: Setup PKI environment
          command: npx nx run pki:run
      - run:
          name: Integration test node applications
          command: |
            docker compose -f compose.dev.yml up -d
            docker ps
            npx nx run-many -t integration --parallel=4 -- --runInBand

  build_android:
    docker:
      - image: cimg/android:2023.09
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: .
      - node/install
      - run:
          name: Uninstall Ruby
          command: sudo apt-get remove ruby-full
      - ruby/install:
          version: $(cat .ruby-version)
      - ruby/install-deps:
          app-dir: apps/client
          include-branch-in-cache-key: false
      - run:
          name: Install build dependencies
          command: sudo apt-get update && sudo apt-get install -y ninja-build
      - run:
          name: Build android application
          command: npx nx build:android client

  build_container:
    docker:
      - image: cimg/base:current
    resource_class: medium
    parameters:
      app:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build containers
          command: docker compose build << parameters.app >>

workflows:
  build_and_test:
    jobs:
      - install_dependencies
      - build_node:
          requires:
            - install_dependencies
      - test_node:
          requires:
            - build_node
      - integration_node:
          requires:
            - build_node
      - lint_node:
          requires:
            - build_node
      - type_check_node:
          requires:
            - build_node
      - build_android:
          requires:
            - build_node
      - build_container:
          matrix:
            parameters:
              app:
                - api
                - management
                - server
